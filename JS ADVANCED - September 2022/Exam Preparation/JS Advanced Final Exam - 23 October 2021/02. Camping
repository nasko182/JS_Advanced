class SummerCamp{
    constructor(organizer ,location){
        this.organizer = organizer;
        this.location = location;
        this.priceForTheCamp ={
            child:150,
            student:300,
            collegian: 500
        }
        this.listOfParticipants = [];
    }

    registerParticipant (name, condition, money){
        let price = this.priceForTheCamp[condition];
        if(price==undefined){
            throw new Error("Unsuccessful registration at the camp.")
        }
        if(this.listOfParticipants.some(p=>p.name==name)){
            return `The ${name} is already registered at the camp.`
        }
        if(money<price){
            return `The money is not enough to pay the stay at the camp.`;
        }

        this.listOfParticipants.push({
            name,
            condition,
            power: 100,
            wins:0
        })

        return `The ${name} was successfully registered.`;

    }

    unregisterParticipant (name){
        let participant = this.listOfParticipants.find(p=>p.name==name);
        if(participant==undefined){
            throw new Error(`The ${name} is not registered in the camp.`)
        }
        let index = this.listOfParticipants.indexOf(participant);
        this.listOfParticipants.splice(index,1);
        return `The ${name} removed successfully.`
    }

    timeToPlay (typeOfGame, participant1, participant2){
        let player1 = this.listOfParticipants.find(p=>p.name==participant1);
        if(player1 ==undefined){
            throw new Error(`Invalid entered name/s.`);
        }

        if(typeOfGame=="WaterBalloonFights"){
            let winnerName = ``;
            let player2 = this.listOfParticipants.find(p=>p.name==participant2);
            if(player2 ==undefined){
                throw new Error(`Invalid entered name/s.`);
            }
            if(player1.condition!=player2.condition){
                throw new Error(`Choose players with equal condition.`);
            }
            if(player1.power>player2.power){
                winnerName = player1.name;
                player1.wins++;
            }
            else if(player2.power>player1.power){
                winnerName = player2.name;
                player2.wins++;
            }
            else{
                return `There is no winner.`
            }

            return `The ${winnerName} is winner in the game ${typeOfGame}.`
        }
        else{
            player1.power+=20;
            return  `The ${player1.name} successfully completed the game ${typeOfGame}.`
        }
    }

    toString () {
        let text = `${this.organizer} will take ${this.listOfParticipants.length} participants on camping to ${this.location}\n`;
        let sorted = this.listOfParticipants.sort((a,b)=>b.wins-a.wins);

        for (const participant of sorted) {
            text+=`${participant.name} - ${participant.condition} - ${participant.power} - ${participant.wins}\n`
        }
        return text.trimEnd(`\n`)
    }
}
