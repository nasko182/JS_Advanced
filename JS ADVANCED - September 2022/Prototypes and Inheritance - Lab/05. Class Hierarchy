function solve() {
    class Figure {
        constructor() {
            this.units = 'cm';
        }
    
        get area() { return this._area }
    
        changeUnits(value) {
            if (value == 'cm' || value == 'mm' || value == 'm') {
                this.units = value
            }
        }
    
        toString() { return `Figures units: ${this.units}` }
    }
    class Circle extends Figure {
        constructor(radius) {
            super();
            this._radius = radius;
        }
        get radius() {
            switch (this.units) {
                case 'cm': return this._radius;
                case 'mm': return this._radius * 10;
                case 'm': return this._radius / 100;
            }
        };
        
        set radius(value) { this._radius = value };
    
        get area() { return Math.PI * this.radius ** 2 };
    
        toString() { return super.toString() + ` Area: ${this.area} - radius: ${this.radius}` }
    }
    
    class Rectangle extends Figure {
        constructor(width, height, units){
            super();
            this._width = width;
            this._height = height;
            this.units = units;
        }
        get width() { 
            switch (this.units) {
                case 'cm': return this._width;
                case 'mm': return this._width * 10;
                case 'm': return this._width / 100;
            }
        }
        get height() {
            switch (this.units) {
                case 'cm': return this._height;
                case 'mm': return this._height * 10;
                case 'm': return this._height / 100;
            }
        }
        get area() { return this.width * this.height; }
        toString() { return super.toString() + ` Area: ${this.area} - width: ${this.width}, height: ${this.height}`};
    }

    return {
        Figure, Circle, Rectangle,
    }
}
