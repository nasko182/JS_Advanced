function sum(cards) {
    let result = [];
    for (const card of cards) {
        let face = ``;
        let suit = ``;
        if (card.length === 2) {
            face = card[0];
            suit = card[1];
        }
        else {
            face = card[0] + card[1];
            suit = card[2];
        }
        function crateCard(face,suit) {
            let faces = [`2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `J`, `Q`, `K`, `A`]
            let suits = `SHDC`;
            if (!faces.includes(face.toString()) || !suits.includes(suit)) {
                return(`Invalid card: ${card}`);
            }
            switch (suit) {
                case `S`: suit = `\u2660 `; break;
                case `H`: suit = `\u2665 `; break;
                case `D`: suit = `\u2666 `; break;
                case `C`: suit = `\u2663 `; break;
            }
            let obj = {
                face,
                suit,
                toString() {
                    return this.face + this.suit;
                }
            };
            return obj.toString();
        }
        result.push(crateCard(face,suit));
 
    }
    if(result.find(el=>el.includes(`Invalid`))===undefined){
        console.log(result.join(` `));
    }
    else{
        console.log(result.find(el=>el.includes(`Invalid`)))
    }
}
